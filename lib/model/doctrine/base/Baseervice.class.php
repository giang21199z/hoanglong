<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ervice', 'doctrine');

/**
 * Baseervice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idnews
 * @property string $images
 * @property string $title
 * @property string $summary
 * @property string $content
 * @property integer $category_idcategory
 * @property CategoryService $CategoryService
 * 
 * @method integer         getIdnews()              Returns the current record's "idnews" value
 * @method string          getImages()              Returns the current record's "images" value
 * @method string          getTitle()               Returns the current record's "title" value
 * @method string          getSummary()             Returns the current record's "summary" value
 * @method string          getContent()             Returns the current record's "content" value
 * @method integer         getCategoryIdcategory()  Returns the current record's "category_idcategory" value
 * @method CategoryService getCategoryService()     Returns the current record's "CategoryService" value
 * @method ervice          setIdnews()              Sets the current record's "idnews" value
 * @method ervice          setImages()              Sets the current record's "images" value
 * @method ervice          setTitle()               Sets the current record's "title" value
 * @method ervice          setSummary()             Sets the current record's "summary" value
 * @method ervice          setContent()             Sets the current record's "content" value
 * @method ervice          setCategoryIdcategory()  Sets the current record's "category_idcategory" value
 * @method ervice          setCategoryService()     Sets the current record's "CategoryService" value
 * 
 * @package    hoanglong
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseervice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('service');
        $this->hasColumn('idnews', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('images', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'news.jpg',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 120,
             ));
        $this->hasColumn('title', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('summary', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('category_idcategory', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CategoryService', array(
             'local' => 'category_idcategory',
             'foreign' => 'idcategory'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}