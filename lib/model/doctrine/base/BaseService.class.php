<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Service', 'doctrine');

/**
 * BaseService
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idnews
 * @property string $images
 * @property string $title
 * @property string $summary
 * @property string $content
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $priority
 * @property integer $category_service_idcategory_service
 * @property CategoryService $CategoryService
 * 
 * @method integer         getIdnews()                              Returns the current record's "idnews" value
 * @method string          getImages()                              Returns the current record's "images" value
 * @method string          getTitle()                               Returns the current record's "title" value
 * @method string          getSummary()                             Returns the current record's "summary" value
 * @method string          getContent()                             Returns the current record's "content" value
 * @method timestamp       getCreatedAt()                           Returns the current record's "created_at" value
 * @method timestamp       getUpdatedAt()                           Returns the current record's "updated_at" value
 * @method integer         getPriority()                            Returns the current record's "priority" value
 * @method integer         getCategoryServiceIdcategoryService()    Returns the current record's "category_service_idcategory_service" value
 * @method CategoryService getCategoryService()                     Returns the current record's "CategoryService" value
 * @method Service         setIdnews()                              Sets the current record's "idnews" value
 * @method Service         setImages()                              Sets the current record's "images" value
 * @method Service         setTitle()                               Sets the current record's "title" value
 * @method Service         setSummary()                             Sets the current record's "summary" value
 * @method Service         setContent()                             Sets the current record's "content" value
 * @method Service         setCreatedAt()                           Sets the current record's "created_at" value
 * @method Service         setUpdatedAt()                           Sets the current record's "updated_at" value
 * @method Service         setPriority()                            Sets the current record's "priority" value
 * @method Service         setCategoryServiceIdcategoryService()    Sets the current record's "category_service_idcategory_service" value
 * @method Service         setCategoryService()                     Sets the current record's "CategoryService" value
 * 
 * @package    hoanglong
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseService extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('service');
        $this->hasColumn('idnews', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('images', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'news.jpg',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 120,
             ));
        $this->hasColumn('title', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('summary', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('priority', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('category_service_idcategory_service', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CategoryService', array(
             'local' => 'category_service_idcategory_service',
             'foreign' => 'idcategory_service'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}